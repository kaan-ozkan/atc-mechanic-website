// Main Styles

// See the other SASS partials for typography, variables etc.
// CSS Grid is used for the layout with fallbacks for less capable browsers
// declared beforehand, and a @supports feature query to reset fallbacks when
// necessary. https://rachelandrew.co.uk/css/cheatsheets/grid-fallbacks

// the body element is our primary layout grid
body {
  height: 100vh;
  width: 100vw;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 6fr) [main-end]
    minmax(1rem, 1fr) [full-end];
  @media screen and (min-width: $screen-lg-min) {
    grid-template-columns:
      [full-start] minmax(1rem, 1fr)
      [main-start] minmax(0, 2fr) [main-end]
      minmax(1rem, 1fr) [full-end];
  }
}

// by default, make any new children of body to span the full track
body > * {
  grid-column: full;
  padding: 1rem 1rem;
}

// our main content wrapper, the width scales with font size
main {
  width: 100%;
  max-width: 52rem;
  margin-right: auto;
  margin-left: auto;
  grid-column: main;
  display: grid;
  padding-top: 6rem;
  padding-bottom: 4rem;
  grid-template-rows: min-content min-content min-content min-content min-content min-content;
  @media screen and (min-width: $screen-md-min) {
    align-content: start;
  }
  @media screen and (min-width: $screen-lg-min) {
    align-content: start;
    padding-top: 8rem;
    padding-bottom: 8rem;
  }
}

// reset breaking fallbacks (e.g. widths) if CSS Grid is supported
// float, inline-block, table properties are already ignored by CSS Grid
@supports (display: grid) {
  main {
    width: auto;
    max-width: none;
  }
}

// header, the first grid row
// it is also a grid for the logo and nav
header {
  width: 100vw;
  max-width: 100vw;
  grid-column: full;
  display: grid;
  vertical-align: middle;
  background-color: $brand-color;
  padding: 0.85rem;
  @media screen and (min-width: $screen-sm-min) {
    grid-template-columns: auto auto;
    grid-column-gap: 1rem;
  }
}

// logo, is a grid item
header > h1 {
  display: inline-block;
  vertical-align: middle;
  padding-bottom: 1rem;
  @media screen and (min-width: $screen-sm-min) {
    padding-bottom: 0;
  }
  a,
  a:visited {
    text-decoration: none;
    border: 0;
    color: white;
    @media screen and (min-width: $screen-sm-min) {
      padding: 1rem;
    }
  }
  a:hover {
    color: white;
  }
}

header > div > img {
  display: inline-block;
  vertical-align: middle;
  width: 60px;
  @media screen and (min-width: $screen-xs-min) {
    width: 75px;
  }
  @media screen and (min-width: $screen-md-min) {
    width: 85px;
  }
  @media screen and (min-width: $screen-lg-min) {
    width: 100px;
  }
}

header > div {
  display: inline-block;
  margin: 0 auto;
  @media screen and (min-width: $screen-lg-min) {
    margin: 0 0;
  }
  vertical-align: middle;
  white-space: nowrap;
}

header > div > div {
  display: inline-block;
  vertical-align: middle;
}

// logo, is a grid item
header > div > h1 {
  display: inline-block;
  vertical-align: middle;
  padding-bottom: 0rem;
  @media screen and (min-width: $screen-sm-min) {
    padding-bottom: 0;
  }
  a,
  a:visited {

    text-decoration: none;
    border: 0;
    color: white;
    @media screen and (min-width: $screen-sm-min) {
      padding: 1rem;
    }
  }
  a:hover {
    color: white;
  }
}

// main menu, is a grid item
header > nav {
  font-size: 1.4rem;
  @media screen and (min-width: $screen-sm-min) {
    float: right;
  }
  @media screen and (min-width: $screen-lg-min) {
    font-size: 1.8rem;
  }
  @media screen and (max-width: $screen-xs-max) {
    font-size: 1.4
  }
  align-self: middle;
  align-content: middle;
  align-items: center;
  vertical-align: middle;
  ul {
    // flexbox is better than grid for distributing an unknown qty of children
    height: 100%;
    display: flex;
    align-self: middle;
    align-content: middle;
    align-items: center;
    vertical-align: middle;
    justify-content: center;
    @media screen and (min-width: $screen-lg-min) {
      justify-content: right;
    }
    li {
      justify-content: center;
      display: flex;
      text-align:center;
      align-items: center;
      vertical-align: middle;
      margin-right: 2rem;
      @media screen and (min-width: $screen-sm-min) {
        margin-right: 1.5rem;
      }
      @media screen and (min-width: $screen-lg-min) {
        margin-right: 2.5rem;
      }
      a,
      a:visited {
        justify-content: center;
        vertical-align: middle;
        color:rgba(255,255,255,.7);
        display: flex;
        align-items: center;
        text-decoration: none;
        border: 0;
        @media screen and (min-width: $screen-sm-min) {

        }
        &[data-current="current page"] {
          color:rgba(255,255,255,1);
          font-weight: bolder;
          // you can add an active nav item style here
        }
      }
      a:hover {
        display: flex;
        align-items: center;
        color:rgba(230,230,255,1);
        vertical-align: middle;
      }
    }
  }
}

// blog posts list
html[data-current="blog"] main > section {
  ol li {
    padding: 2rem 0;
    border-bottom: 0.05em solid $hairline-color;
    p {
      padding-bottom: 0;
    }
  }
}

// adjacent blog posts links
nav[aria-label="Adjacent Posts"] {
  padding: 4rem 0;
  ul {
    display: flex;
    li {
      flex: 0 0 50%;
      width: auto;
      &:nth-child(2) {
        text-align: right;
      }
    }
  }
}

// contact form
html[data-current="contact"] main > form {
  display: grid;
  label {
    display: none;
  }
  input,
  textarea {
    width: 100%;
    padding: 1rem;
    margin-bottom: 2rem;
  }
  button {
    width: 100%;
  }
}

// reset CSS Grid fallbacks when they aren't required
@supports (display: grid) {
  html[data-current="contact"] main > form {
    input,
    textarea,
    button {
      width: auto;
      max-width: none;
    }
  }
}

footer {
  grid-column: full;
  display: grid;
  align-items: center;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 0.125fr) [main-end]
    minmax(1rem, 1fr) [full-end];
  background-color: $footer-bg-color;
  > small {
    grid-column: main;
  }
  color: $footer-text-color;
}
